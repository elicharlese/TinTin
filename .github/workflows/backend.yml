name: Backend CI/CD Pipeline

on:
  push:
    branches: [main, develop]
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'backend/**'

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run TypeScript linting
        run: npm run lint:backend
      
      - name: Run TypeScript tests
        run: npm run test:backend
      
      - name: Build TypeScript
        run: npm run build:backend
      
      - name: Run Rust formatting check
        run: cd backend/rust-solana && cargo fmt --all -- --check
      
      - name: Run Rust clippy
        run: cd backend/rust-solana && cargo clippy --all-targets --all-features -- -D warnings
      
      - name: Run Rust tests
        run: cd backend/rust-solana && cargo test

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: lint-and-test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
